'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _promise = require('babel-runtime/core-js/promise');

var _promise2 = _interopRequireDefault(_promise);

exports.default = childPrinted;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function childPrinted(child, predicate, stream) {
  var streams = stream === 'stdout' ? [child.stdout] : stream === 'stderr' ? [child.stderr] : [child.stdout, child.stderr];

  return new _promise2.default(function (_resolve, _reject) {
    function unlisten() {
      child.removeAllListeners();
      streams.forEach(function (stream) {
        return stream.removeListener('data', onData);
      });
    }

    function resolve(data) {
      unlisten();
      _resolve(data);
    }

    function reject(error) {
      unlisten();
      _reject(error);
    }

    function onData(data) {
      var message = data.toString();
      if (predicate instanceof RegExp ? predicate.test(message) : predicate(message)) resolve(data.toString());
    }
    streams.forEach(function (stream) {
      return stream.on('data', onData);
    });

    var onClose = function onClose() {
      return reject(new Error('stream closed'));
    };
    var onExit = function onExit() {
      return reject(new Error('process exited'));
    };
    child.on('error', reject);
    child.on('exit', onExit);
    child.on('close', onClose);
  });
}